package {    import flash.display.DisplayObject;    public class SkinDefaults {        public static function get values():Object {			return {				backgroundColor: "rgba(0, 0, 0, 0.7)",				backgroundGradient: "none",				border: "0px",				borderRadius: "0px",				bottom: 0, 				bufferColor: "#445566",				bufferGradient: "none",				buttonColor: "#00a4e4",				buttonOffColor: "rgba(130,130,130,1)",				buttonOverColor: "#ffffff",				disabledWidgetColor: "#555555",   // used for all buttons and widgets				durationColor: "#717073",								height: 36, 				left: '50%', 				margins: [2, 12, 2, 12], // Additional margins to be left around the whole controlbar. [top, right, bottom, left]				progressColor: "#00a4e4",				progressGradient: "none",				// what percentage the scrubber handle should take of the controlbar total height				scrubberHeightRatio: 0.6,				// what percentage the scrubber horizontal bar should take of the controlbar total height				scrubberBarHeightRatio: 0.3,				sliderBorder: '1px solid rgba(128, 128, 128, 0.7)',				sliderColor: "#717073",				sliderGradient: "none",				spacing: { all: 2, volume: 4, time: 2 },				timeBgColor: 'rgb(0, 0, 0, 0)',				// how much the time view colored box is of the total controlbar height				timeBgHeightRatio:  0.8,				timeBorder: '0px solid rgba(0, 0, 0, 0.3)',				timeBorderRadius: 20,				timeColor: "#ffffff",				timeSeparator: " ",				timeFontSize: 12,				tooltipColor: "#000000",				tooltipTextColor: "#ffffff",				// what percentage the horizontal volume bar should take of the controlbar total height				volumeBarHeightRatio: 0.3,				volumeBorder: '1px solid rgba(128, 128, 128, 0.7)',				volumeBoxPadding: 4, // moves the vertical volume bar up or down (the greater the value, the more down)				volumeColor: '#00a4e4',				volumeSliderColor: "#00a4e4",				volumeSliderGradient: "none",				// what percentage the volume slider handle should take of the controlbar total height				volumeSliderHeightRatio: 0.6,				width: "100%", 				zIndex: 2,								autoHide: { 					enabled: false,					fullscreenOnly: false, 					delay: 2000, 					duration: 1000, 					style: 'fade' 				},								share: true							}        }        public static function getScrubberRightEdgeWidth(nextWidgetToRight:DisplayObject):Number {            return 0;        }		public static function getVolumeSliderWidth():Number {            return 80; // this is actually the height of the volume slider because it is rotated 90 degrees        }				public static function getVolumeSliderHeight():Number {			return 25; // this is actually the width of the volume slider because it is rotated 90 degrees		}    }}